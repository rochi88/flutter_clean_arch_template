name: Flutter Release

on:
  # push:
  #   branches: [ "main" ]
  # pull_request:
  #   branches: [ "main" ]
  #   types: [labeled, opened, synchronize, reopened]
  release:
    types: [released]

  workflow_dispatch:

jobs:
  tests:
    name: Test and analyze flutter code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.3'
          channel: 'stable'

      # - name: Run analyze, test
      #   run: |
      #     flutter analyze --fatal-warnings
      #     flutter test --coverage

      - name: Run test
        run: |
          flutter test --coverage

  build:
    name: Build app
    needs: [tests]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # os: [ubuntu-latest, macos-latest]
        os: [ubuntu-latest]

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: "12.x"  
          # cache: 'gradle'

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.19.6"
          channel: 'stable'
          architecture: x64
          # cache: true

      - name: Build Android app
        if: ${{ matrix.os == 'ubuntu-latest' }}
        env:
          STORE_PASSWORD: ${{ secrets.STORE_PASSWORD }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        run: |
          echo "Building Android..."
          pwd
          flutter clean
          flutter pub get
          flutter build apk --no-pub
          flutter build appbundle --no-pub

      # - name: Build iOS app
      #   if: ${{ matrix.os == 'macos-latest' }}
      #   run: |
      #     flutter clean
      #     flutter pub get
      #     echo "Building iOS..."
      #     flutter build ios --release --no-codesign

      - name: 'Upload Android Builds'
        uses: actions/upload-artifact@v3
        if: ${{ matrix.os == 'ubuntu-latest' }}
        with:
          name: builds_android
          path: |
            build/app/outputs/flutter-apk/app-release.apk
            build/app/outputs/bundle/release/app-release.aab
          retention-days: 5

      # - name: 'Upload iOS Builds'
      #   uses: actions/upload-artifact@v3
      #   if: ${{ matrix.os == 'macos-latest' }}
      #   with:
      #     name: builds_iOS
      #     path: |
      #       build/ios/iphoneos/Runner.app
      #     retention-days: 5

      # - name: Build for Windows
      #   if: ${{ matrix.os == 'windows-latest' }}
      #   run: |
      #     flutter config --enable-windows-desktop
      #     flutter build windows

      # - name: Build for Linux desktop
      #   if: ${{ matrix.os == 'ubuntu-latest' }}
      #   run: |
      #     sudo apt-get update -y
      #     sudo apt-get install -y ninja-build libgtk-3-dev
      #     flutter config --enable-linux-desktop
      #     flutter build linux

      - name: Release Build to internal track
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.PLAYSTORE_ACCOUNT_KEY }}
          packageName: octopus
          releaseFiles: app-release.aab
          track: alpha
          status: completed